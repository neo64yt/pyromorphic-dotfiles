#!/bin/sh

# Modified from https://gist.github.com/sebastiencs/5d7227f388d93374cebdf72e783fbd6a 

# Usage:
# - Increase volume by 5%:
#   $ volumectl up
# - Decrease volume by 5%:
#   $ volumectl down
# - Toggle mute
#   $ volumectl mute

dev_id="@DEFAULT_SINK@"

get_volume() {
    wpctl get-volume "$dev_id" | sed 's/Volume: //' | awk '{print $1*100}'
}

is_mute() {
    wpctl get-volume "$dev_id" | grep "MUTED" > /dev/null
}

send_notification() {
    volume=$(get_volume)

    if [ "$volume" -eq 0 ]; then
        icon="audio-volume-muted"
    elif [ "$volume" -le 50 ]; then
        icon="audio-volume-low"
    elif [ "$volume" -ge 50 ] && [ "$volume" -lt 80 ]; then
        icon="audio-volume-medium"
    else
        icon="audio-volume-high"
    fi

    # Send the notification
    dunstify -i "$icon" -u normal -h string:x-dunst-stack-tag:audio "Volume" -h int:value:"$volume"
}

case $1 in
    up)
	# Set the volume on (if it was muted)
	wpctl set-mute "$dev_id" 0 > /dev/null
	# Up the volume (+ 5%)
	wpctl set-volume "$dev_id" 1%+ > /dev/null
	send_notification
	;;
    down)
	wpctl set-mute "$dev_id" 0 > /dev/null
	wpctl set-volume "$dev_id" 1%- > /dev/null
	send_notification
	;;
    mute)
    # Toggle mute
	wpctl set-mute "$dev_id" toggle > /dev/null
	if is_mute ; then
	    dunstify -i audio-volume-muted-blocking -u normal "Mute"
	else
	    send_notification
	fi
	;;
esac
